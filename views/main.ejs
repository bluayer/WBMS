<!DOCTYPE html>
<html>

<head>
	<title>WBMS</title>
    <% include ./header %>
    <%# <link href="/stylesheet/main.scss" rel="stylesheet" type="text/css" > %>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCfv6vrJEKeILjV8zh2UeNfWQp35DNJ7nU&callback=initMap" async defer></script>
    <style>
      #map {
        left:0;
        top:0;
        height:100%;
        width:100%;
        position: absolute;
      }
      .map-responsive {
        overflow:hidden;
        padding-bottom:56.25%;
        position:relative;
        height:0;
      }
      .vertical-center {
        margin: 0 auto;
      }
      .link-btn {
        justify-items: center;
        margin: auto;
      }
      .center{
        margin: 0 auto;
        display: block;
      }

      .right {
        margin: 0 0 0 auto;
        display: block;
      }
    </style>
</head>	
<body>
  <div class="container">
    <h1>WBMS</h1>
    <div class="row">
      <div class="vertical-center">
      </div>
    </div>
    <br>
    <div class="row">
      <div class="col">
        <form id="searchForm" name="searchForm" onsubmit="return searchMarkerbyID()">
          <input type="text" placeholder="SearchID.." name="search">
          <input type="submit" class="btn btn-success" value= "submit">
        </form>
      </div>
      <div class="col">
        <button type="button" class="btn btn-info center" onClick="location.href='/pisensor'">pisensorTest</button>
      </div>
    </div>
    <br>
    <div class="row vertical-center">
      <div class="col map-responsive">
        <div id="map"></div>
      </div>
    </div>
  </div>
  <script>
  let locations = [];
  let content = [];
  let markers = [];
  let infoWindow;
  let map;
  let bounds = [];

  function initMap() {
    $.ajax({
      url: "/pisensor/pilocation",
      type: 'GET',
      success: function(res) {
        console.log(res);
      }
    }).then((res) => {
      locations = res;
    }).then(() => {
      map = new google.maps.Map(document.getElementById('map'), {
        zoom: 4,
        center: new google.maps.LatLng(locations[0][1], locations[0][2]),
        mapTypeId: google.maps.MapTypeId.ROADMAP
      });

      infowindow = new google.maps.InfoWindow();

      for (i = 0; i < locations.length; i++) {  
        marker = new google.maps.Marker({
          id: locations[i][0],
          position: new google.maps.LatLng(locations[i][1], locations[i][2]),
          map: map
        });
        
        markers.push(marker);

        bound = new google.maps.LatLngBounds();

        loc = new google.maps.LatLng(marker.position.lat(), marker.position.lng());
        bound.extend(loc);
        bounds.push(bound);

        content[i] = 
          '<br>latitude :' + locations[i][1]
          + '<br>longitude :' + locations[i][2]
          + '<br>temperature :' + locations[i][3]
          + '<br>battteryRemain :' + locations[i][4]
          + '<br><a href="/statistic/'
          + locations[i][0]
          + '">statistic</a>';
          
        google.maps.event.addListener(marker, 'click', ((marker, i) => {
          return () => {
            console.log(i);
            infowindow.setContent(locations[i][0] + content[i]);
            infowindow.open(map, marker);
            map.fitBounds(bounds[i]);
            map.setZoom(map.getZoom() > 12 ? 12 : map.getZoom());
            map.panToBounds(bounds[i]);
          }
        }) (marker, i));
      }
    }); 
  }

  function searchMarkerbyID () {
    const ID = document.forms["searchForm"]["search"].value;
    for (i = 0; i < markers.length; i++) {
      if (ID === markers[i].id) {
        infowindow.setContent(locations[i][0] + content[i]);
        infowindow.open(map, markers[i]);
        map.fitBounds(bounds[i]);
        map.setZoom(map.getZoom() > 12 ? 12 : map.getZoom());
        map.panToBounds(bounds[i]);
      }
    }
  }
  $('#searchForm').submit(function () {
    return false;
  });
  </script>
</body>
</html>